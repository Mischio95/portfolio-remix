generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar(255)
  email    String  @unique @db.VarChar(255)
  password String  @db.VarChar(255)
  imageUrl String?
  posts    posts[]
}

model posts {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  content   String
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    users    @relation(fields: [authorId], references: [id])

  @@index([authorId])
}

model Player {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  lives Int

  @@index([name])
}

model Expense {
  id            Int      @id @default(autoincrement())
  description   String
  cost          Float
  isVatIncluded Boolean
  isMonthly     Boolean
  category      String   @default("Uncategorized") // Nuovo campo per la categoria
  createdAt     DateTime @default(now())
}

model Fornitori {
  id        Int      @id @default(autoincrement())
  nome      String
  sitoWeb   String?  @db.VarChar(255)
  telefono  String?  @db.VarChar(20)
  email     String?  @db.VarChar(255)
  createdAt DateTime @default(now())
}

model MarketData {
  id           Int      @id @default(autoincrement())
  marketSize   Float
  growthRate   Float
  demographics Json
  trends       Json
  swot         Json
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Competitor {
  id                         Int      @id @default(autoincrement())
  nomeAzienda                String
  sitoWeb                    String
  descrizioneProdottiVenduti String? // Campo opzionale
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
}

model Preventivo {
  id               Int           @id @default(autoincrement())
  clientName       String?
  clientCognome    String?
  clientAddress    String?
  clientPhone      String?
  clientEmail      String?
  clientVat        String?
  providerName     String?
  providerAddress  String?
  providerPhone    String?
  providerEmail    String?
  providerVat      String?
  preventivoNumber String?
  issueDate        DateTime?
  dueDate          DateTime?
  paymentTerms     String?
  notes            String?
  items            ExpenseItem[]
  subtotal         Float
  totalVat         Float
  total            Float
}

model ExpenseItem {
  id           Int        @id @default(autoincrement())
  description  String?
  quantity     Int?
  unitPrice    Float?
  vatIncluded  Boolean?
  category     String?
  preventivoId Int
  preventivo   Preventivo @relation(fields: [preventivoId], references: [id], onDelete: Cascade)
}

model Spese {
  id                    Int      @id @default(autoincrement())
  name                  String
  amount                Float
  reimbursement         Boolean  @default(false)
  reimbursementAmount   Float? // Aggiungi questo campo
  reimbursementReceived Boolean  @default(false)
  date                  DateTime
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}
